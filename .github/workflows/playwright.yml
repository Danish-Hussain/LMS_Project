name: Playwright E2E

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers
          restore-keys: |
            ${{ runner.os }}-playwright-browsers
      - name: Install deps
        run: npm ci
      - name: Set DATABASE_URL for Prisma
        run: echo "DATABASE_URL=file:./tmp/test.db" >> $GITHUB_ENV
      - name: Ensure tmp directory exists
        run: mkdir -p tmp
      - name: Generate prisma client
        run: npx prisma generate
      - name: Apply migrations / push schema
        run: npx prisma db push
      - name: Prepare DB
        env:
          DATABASE_URL: file:./tmp/test.db
        run: |
          npx prisma generate
          npx prisma db push
          npm run seed
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Prepare auth storage
        env:
          DATABASE_URL: file:./tmp/test.db
        run: |
          rm -f tests/e2e/storageState.json || true
          npm run auth:setup || true

      - name: Build production server
        run: npm run build

      - name: Start production server on 3003 (background)
        run: |
          HOST=0.0.0.0 PORT=3003 npm start &

      - name: Start dev server on 3001 (background)
        run: |
          HOST=0.0.0.0 PORT=3001 npm run dev &

      - name: Wait for servers to be ready
        run: |
          npx wait-on http://127.0.0.1:3001/api/auth/login
          npx wait-on http://127.0.0.1:3003/progress

      - name: Health-check servers (print status)
        run: |
          echo "Checking http://127.0.0.1:3001/api/auth/login"
          curl -s -o /dev/null -w "%{http_code}\n" http://127.0.0.1:3001/api/auth/login || true
          echo "Checking http://127.0.0.1:3003/progress"
          curl -s -o /dev/null -w "%{http_code}\n" http://127.0.0.1:3003/progress || true

      - name: Run Playwright tests
        run: npx playwright test --config=playwright.config.ts
